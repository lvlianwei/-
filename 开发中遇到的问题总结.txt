================================================================
c++
===============================================================
1 多个文件时，要将多个文件一起编译才可使用，不然会出现 undefined reference to error得错误。
	多文件编译方案：	
		a 使用g++ 几个文件一起编译    g++ a.cpp b.cpp -o ab
		b 分别编译各个源文件，之后对编译后输出的目标文件链接。
			用法：
			#gcc -c a.cpp //a.cpp编译成a.o
			#gcc -c b.cpp //b.cpp编译成b.o
			#gcc -o a.o b.o -o test //将a.b.o链接成test
		第一中方法编译时需要所有文件重新编译，而第二种方法可以只重新编译修改的文件，未修改的文件不用重新编译。
	总结：其实最好的编译方案是通过Makefile文件进行编译
	
2 在.cpp文件中实现.h文件中的方法时，切记一定要把virtual方法实现。一定要。。。

3 在.cpp文件中实现.h文件中的方法时，已经在方法名上做了类限定符号，在方法体中不需要再写
	eg:	
		int Fun::add(){
			return get();//get（）方法上不需要再写Fun::
		}
	
4 error: ISO C forbids declaration of ‘add’ with no type [-fpermissive]
	不让声明，说明函数写的有问题（这次是函数实现时忘记了返回值）
	
5 undefined reference to `vtable for B'
	一般是基类的虚函数未被实现
	
6 c++中实例化对象的三种方式及其区别

	class A{}
	A a；在栈上分配内存，系统自动回收
	
	A a()；在栈上分配内存，系统自动回收，但是不能用来实例化无参构造的类
	A *a =new A；在堆上分配内存，手动回收内存delete，可以实例化有参无参类。。
	

================================================================
linux
===============================================================
1 在更改make的版本过程中，编译时遇到undefined reference to `__alloca'错误
	
	修改 make文件中的glob/glob.c 
	添加以下内容
		//      #if  !defined  __alloca  &&  !defined  __GNU_LIBRARY__

		#  ifdef        __GNUC__
		#    undef  alloca
		#    define  alloca(n)        __builtin_alloca  (n)
		#  else        /*  Not  GCC.    */
		#    ifdef  HAVE_ALLOCA_H
		#      include  <alloca.h>
		#    else        /*  Not  HAVE_ALLOCA_H.    */
		#      ifndef  _AIX
		#        ifdef  WINDOWS32
		#          include  <malloc.h>
		#        else
		extern  char  *alloca  ();
		#        endif  /*  WINDOWS32  */
		#      endif  /*  Not  _AIX.    */
		#    endif  /*  sparc  or  HAVE_ALLOCA_H.    */
		#  endif        /*  GCC.    */

		#  define  __alloca        alloca

		//      #endif
	保存退出后重新编译即可
	
	
	
	
	

================================================================
git
===============================================================	
1 在使用指令git push -u origin master 往远程服务器上上传文件时报错
		To git@github.com:lvlianwei/FileServer.git
		 ! [rejected]        master -> master (fetch first)
		error: failed to push some refs to 'git@github.com:lvlianwei/FileServer.git'
		hint: Updates were rejected because the remote contains work that you do
		hint: not have locally. This is usually caused by another repository pushing
		hint: to the same ref. You may want to first integrate the remote changes
		hint: (e.g., 'git pull ...') before pushing again.
		hint: See the 'Note about fast-forwards' in 'git push --help' for details.
	原因是本地的仓库中没有README.MD文件
	解决：
		$ git pull --rebase origin master
		$ git push -u origin master


	