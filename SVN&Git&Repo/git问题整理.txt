  
  
1  使用git pull origin master上拉取github远程git库时，遇到fatal: refusing to merge unrelated histories

	解决方案：
		1.git checkout master #切换到要提交代码的分支
		2.git pull origin master --allow-unrelated-histories #加上后面这个选项允许不相关历史提交
		3.git push origin master #提交到远程分支
		
2 撤回已经提交到本地仓库文件。
	1）本地修改的提交内容不保留
			git log  找到当时提交时的commitID
			git reset --hard commit_id    回退到指定版本
		这时，本地的文件也会回退到指定的版本，也就是说你此次的修改不会被保留。
	2）撤回到指定版本，但是本次修改的内容保留在本地。（一般用于你此次误提交了部分文件，想撤回本次提交后再重新提交）
			git reset --soft  commitID	将此次修改的内容保留在本地。
			
3 github  push 时报错fatal: sha1 file '<stdout>' write error: Invalid argument
	一般是在此次push的文件中，存在过大的文件。
	
4 当使用git clone 克隆仓库时，使用git branch -a 查看所有的分支时，会多出一个origin/HEAD -> origin/master分支。
	origin/HEAD就像一个指针，表示默认分支，你的例子中它指向origin/master，即origin/master是默认分支。
	可以删除
		git remote set-head origin -d
		
5 执行git push origin singleBranch : singleBranch命令时，提示error: dst ref refs/heads/singleBranch receives from more than one src.错误
	命令参数问题
	在git push origin singleBranch : singleBranch命令中，多打了两个空格。
	
6 Git错误fatal: CRLF would be replaced by LF in xxx
	在windows上编写的Linux的代码，在git add .时会报以上错误。
	解决方案：
		在linux上编写代码
		
7 git 可以pull 但是push 就报无权限错误
	解决方案：
		1 检查本地.ssh文件夹内的公钥和github中的ssh公钥是否相同
		2 看本地的.git/config设置的仓库url地址和github使用的链接地址是否一致如下图,如use https,则url需要用https的仓库地址
		https://segmentfault.com/q/1010000003061640
		
8 解决`向github提交代码是老要输入用户名密码`
	解决方案：https://www.jianshu.com/p/81ae6e77ff47
	1在命令行输入命令:
		git config --global credential.helper store
	2 现在push你的代码 (git push), 这时会让你输入用户名密码, 这一步输入的用户名密码会被记住, 下次再push代码时就不用输入用户名密码啦!