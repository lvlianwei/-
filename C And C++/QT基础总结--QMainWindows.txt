
1 QMainWindow中常用部件的使用

  //=====================================
  //菜单栏，只有一个
  //创建菜单栏
 QMenuBar * menubar= menuBar();

  //将菜单栏加入窗体中
 this->setMenuBar(menubar);

 //添加文件菜单
  QMenu* fileMenu=menubar->addMenu("文件");
  QMenu* editMenu=menubar->addMenu("编辑");

  //添加菜单项
 QAction * action1= fileMenu->addAction("新建");

  //添加分割线
 fileMenu->addSeparator();
 QAction * action2= fileMenu->addAction("打开");

 //=====================================
 //创建工具栏,可以多个
  QToolBar * toolBar=new QToolBar(this);
   this->addToolBar(Qt::LeftToolBarArea,toolBar);//设置默认在左边停靠
  //设置左右停靠
 toolBar->setAllowedAreas(Qt::LeftToolBarArea|Qt::RightToolBarArea);
  //设置浮动
 toolBar->setFloatable(false);

 //设置移动（总开关）
  toolBar->setMovable(false);

  //往工具栏中添加菜单项
  toolBar->addAction(action1);
  //添加分割线的
  toolBar->addSeparator();
  toolBar->addAction(action2);

//=====================================
  //状态栏
  QStatusBar * stBar= statusBar();
  //添加状态栏到面板中
  this->setStatusBar(stBar);

  //新建一个标签
  QLabel *label1=new QLabel("提示信息！",this);
  //将便签添加到状态栏中
  stBar->addWidget(label1);

   QLabel *label2=new QLabel("提示信息右侧！",this);
  stBar->addPermanentWidget(label2);


  //=====================================
  //铆接部件，浮动窗口，多个
  //创建
   QDockWidget * dockWidget=new QDockWidget;
   //将铆接部件添加到窗体中，并设置默认位置为右侧
   this->addDockWidget(Qt::RightDockWidgetArea,dockWidget);
   //设置停靠范围
   dockWidget->setAllowedAreas(Qt::TopDockWidgetArea|Qt::BottomDockWidgetArea);


   //=====================================
   //核心部件
  QTextEdit * textEdit=new QTextEdit;
  //添加到窗体中
  this->setCentralWidget(textEdit);
  //=====================================
  
  
 2 给部件添加图标
  //添加资源文件 到项目中
	  1 将资源拷贝到项目的根目录下
	  2 右击项目-》添加新文件-》QT->QT ResourceFile->填名称（出现一个qrc文件）
	  3 在qrc中添加资源文件的前缀等信息
	  4 点击添加文件，选择刚才添加到项目中的资源文件
	  5 确定后将文件添加到了项目中。
  
  //通过ui寻找控件
  //使用资源文件 " : + 前缀名 + 文件名 "
	  ui->actionNew->setIcon(QIcon(":/Image/Luffy.png"));
	  ui->actionOpenm->setIcon(QIcon(":/Image/down.png"));


3 对话框Dialog
	//点击新建菜单项 弹出对话框
    connect(ui->actionNew,&QAction::triggered,this,[=](){
        //对话框  有两种
        // 模态对话框 （不可以对其他窗口进行操作） 非模态对话框 （可以对其他窗口操作）
    //        QDialog dlg(this);
    //        dlg.resize(200,100);
    //        dlg.exec(); //阻塞

    //        qDebug() << "弹出对话框！";

        //非模态对话框创建
         //QDialog dlg2(this); 创建到栈上 一闪而过
//        QDialog * dlg2 = new QDialog(this);
//        dlg2->resize(200,100);
//        dlg2->show();
//        //需要设置属性 dlg2   55号
//        dlg2->setAttribute(Qt::WA_DeleteOnClose);

        //使用标准对话框  QMessageBox
        //错误对话框
        //QMessageBox::critical(this,"错误！","critical");
        //信息对话框
        //QMessageBox::information(this,"信息","info");

        //询问对话框
        // 参数1 、父亲 2、标题 3、提示内容  4 按键类型 5 关联回车按键
//         if(QMessageBox::Save == QMessageBox::question(this,"问题","question",QMessageBox::Save | QMessageBox::Cancel,QMessageBox::Cancel))
//         {

//            qDebug() << "点击的是保存";
//         }
//         else
//         {
//            qDebug() << "点击的是取消";
//         }

         //警告对话框
         // QMessageBox::warning(this,"警告！","warning");

        //选择颜色对话框
//        QColor color =  QColorDialog::getColor(QColor(255,0,0));
//        qDebug() << color.red() << color.green() << color.blue();

        //文件对话框
//        QString path =  QFileDialog::getOpenFileName(this,"打开文件","C:\\Users\\zhangtao\\Desktop","(*.txt *.png)");
//        qDebug() << path;