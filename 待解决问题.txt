
 1 c++ 标准是什么？c++ 11 又是啥标准

 2  android MediaPlayer  ----延期（10/21）

 3 在serviceBase中，onAsyncRequest方法中，接收proxy发送的请求，下面代码中的GMTaskDes，在新的线程中传入定义的task ---- 延期（10/21）
	这一块不是很理解
      case USBMethod_Play:
        {
            // define request param
            // unpack request param
            // call request function
            // play(id);
            GMTaskDes des(Runnable_Pri_N, 0, "USBMethod_Play");
            (m_pMainThread->looper()).postRunnable(GMTaskBind(des, this, &GMUsbServiceBase::play, id));
            break;
        }
 4 usb Timer 中的timer作用，及大概实现逻辑
	timer的只要作用是计时器，在usb播放音乐过程中，需要有播放进度条，这个进度条就是通过timer来控制
 

 5 next方法逻辑解析，USbDevicePlayer 的postNext方法中，有个stopTimer方法，这里不太理解，稍后解析。
	这个timer是干啥的？
  
	
6 交叉编译
	编译器在将中间代码连接成当前计算机可执行的二进制程序时，连接程序会根据当前计算机的CPU、操作系统的类型来转换。而根据运行的设备的不同，CPU的架构也是不同，大体有如下三种常见的CUP架构：
	arm结构 ：主要在移动手持、嵌入式设备上。我们的手机几乎都是使用的这种CUP架构。
	x86结构 ： 主要在台式机、笔记本上使用。如Intel和AMD的CPU 。
	MIPS架构：多用在网关、猫、机顶盒等设备。
	
	若想在使用了基于x86架构CPU的操作系统上编译出可以在基于arm结构CPU的操作系统上运行的代码，就必须使用交叉编译。所以综上所述：
	交叉编译就是在一个平台下（比如：CPU架构为X86，操作系统为Windows）编译出在另一个平台上（比如：CPU架构为arm,操作系统为Linux）
	可以执行的二进制代码。Google提供的NDK就可以完成交叉编译的工作。


7 linux中的虚拟地址问题？

8 android中surface flinger问题

9  智能指针
	android中的智能指针。强指针、弱指针
	
	c++标准库中的智能指针 四种
		auto_ptr
		https://blog.csdn.net/zsc_976529378/article/details/52250597
		


10 c++中对文件的操作
 http://www.codeceo.com/article/cpp-file-operate.html
		
			
11  c++ 中怎么使用第三方的封装好的库
	
12 在playlistInfo文件中的next方法参数中forceSequence参数作用。
	forceSequence bool值，在.h文件中的方法定义处付了初值1

13 插入U盘的逻辑中connectManager层和usbService两层中间传递消息的类StorageInfo中的信息
	mountPath 挂载路径
	volumeLabel 卷标签
	isLastOn
	usbSts
	usbInfo类
		// Vendor ID
		android::String8 vid;
	    // Product ID
		android::String8 pid;
		// Manufacturer Name（制造商name）
		android::String8 manufacturer;
		// Serial Number
		android::String8 serialNum
		// USB Port ID
		int32_t port;
		// The device id of USB Device
		int32_t deviceId;
		bool unsupportDevice;
		
14 vscode 中同步插件Settings Sync的使用
	vscode中使用、配置c++/python
	vscode中settings.json文件的配置
	

15 Uri UriMatch ContentValues 这几个类的作用
contentValues 作用和HashMap类似，用来存放键值对数据，在sqlite数据库的insert方法中，使用contentValues对象作为方法参数
	 
	 
16 sqlite 中的PRAGMA以及user_version Pragma
		
17 在usbService中GMUsbDevicePlayer文件中的playStatusChanged方法参数中的mask是干啥的？

18 Easy-mock ？？
		
19 循环者（Looper） MessageQueue  Message   Handler
一个线程对应一个Looper .一个Looper对象对应一个MessageQueue。
MessageQueue用来存放Message
looper对象用来为一个线程开启一个消息巡航，从而操作MessageQueue
======================
Loop:
	Looper 即消息循环器，是消息处理机制的核心，它可以将一个普通线程转换为一个 Looper 线程。所谓的 Looper 线程就是一个不断循环的线程，
	线程不断循环的从 MessageQueue 中获取 Message，交给相应的 Handler 处理任务。

		
20 linux GRUB启动引导程序。		

21 handler消息处理机制								
android 的消息处理机制
对于一些比较耗时的操作，通常会为其开辟一个单独的线程来执行，以尽可能减少用户的等待时间。
在Android中，默认情况下，所有的操作都在主线程中进行，主线程负责管理与UI相关的事件，而在用户自己创建的子线程中，不能对UI组件进行操作。
为了让主线程和子线程间传递数据，使用了handler消息传递机制。Handler不仅仅能将子线程的数据传递给主线程，它能实现任意两个线程的数据传递。
		
22 c++版本

23 c++中的多线程

24 在C++中多线程问题。怎么执行。。。
	项目中没整明白，只知道在platform 层定义了一个NCThread类基类。
	待解决。。。

25 android中的JNI使用和原理。

26 c++第三方库
https://blog.csdn.net/zz861126/article/details/80408470

27 GCC g++ gcc的区别
		GCC:GNU Compiler Collection(GUN 编译器集合)，它可以编译C、C++、JAV、Fortran、Pascal、Object-C等语言。
		gcc是GCC中的GUN C Compiler（C 编译器）
		g++是GCC中的GUN C++ Compiler（C++编译器）
	gcc和g++的主要区别
		1. 对于 *.c和*.cpp文件，gcc分别当做c和cpp文件编译（c和cpp的语法强度是不一样的）
		2. 对于 *.c和*.cpp文件，g++则统一当做cpp文件编译
		3. 使用g++编译文件时，g++会自动链接标准库STL，而gcc不会自动链接STL
		4. gcc在编译C文件时，可使用的预定义宏是比较少的
		5. gcc在编译cpp文件时/g++在编译c文件和cpp文件时（这时候gcc和g++调用的都是cpp文件的编译器），会加入一些额外的宏。
		6.在用gcc编译c++文件时，为了能够使用STL，需要加参数 –lstdc++ ，但这并不代表 gcc –lstdc++ 和 g++等价，它们的区别不仅仅是这个。

28 c++中的符号表
	符号表是库中所有函数，变量的总称，用于连接过程.

29 获取多媒体文件信息开源库 tabLib的使用	

30 makefile 文件编写
https://blog.csdn.net/weixin_38391755/article/details/80380786	


31 c++中内部类的作用，为什么要使用内部类


		
		

		
		
		
		
		
		
		
		
		
		
 
 

	